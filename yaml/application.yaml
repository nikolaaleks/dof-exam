apiVersion: extensions/v1beta1
kind: NetworkPolicy
metadata:
  creationTimestamp: null
  name: dof_exam
spec:
  ingress:
  - from:
    - podSelector:
        matchLabels:
          io.kompose.network/dof_exam: "true"
  podSelector:
    matchLabels:
      io.kompose.network/dof_exam: "true"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: nginx-host-claim0
  name: nginx-host-claim0
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: nginx-host-claim0
  name: nginx-host-claim0
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-alt.yml
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: nginx-host
  name: nginx-host
spec:
  replicas: 3
  selector:
    matchLabels:
      io.kompose.service: nginx-host
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-alt.yml
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.network/dof_exam: "true"
        io.kompose.service: nginx-host
    spec:
      containers:
      - image: dof-exam-master_nginx-host:latest
        imagePullPolicy: ""
        name: nginx-host
        ports:
        - containerPort: 80
        resources: {}
        volumeMounts:
        - mountPath: /site
          name: nginx-host-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: nginx-host-claim0
        persistentVolumeClaim:
          claimName: nginx-host-claim0
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-alt.yml
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: nginx-host
  name: nginx-host
spec:
  ports:
  - name: "80"
    port: 80
    targetPort: 80
  selector:
    io.kompose.service: nginx-host
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: php-host-claim0
  name: php-host-claim0
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-alt.yml
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: php-host
  name: php-host
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: php-host
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-alt.yml
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.network/dof_exam: "true"
        io.kompose.service: php-host
    spec:
      containers:
      - image: dof-exam-master_php-host:latest
        imagePullPolicy: ""
        name: php-host
        ports:
        - containerPort: 9000
        resources: {}
        volumeMounts:
        - mountPath: /site
          name: php-host-claim0
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: php-host-claim0
        persistentVolumeClaim:
          claimName: php-host-claim0
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-alt.yml
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: php-host
  name: php-host
spec:
  ports:
  - name: "9000"
    port: 9000
    targetPort: 9000
  selector:
    io.kompose.service: php-host
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-alt.yml
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: redis-host
  name: redis-host
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redis-host
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-alt.yml
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.network/dof_exam: "true"
        io.kompose.service: redis-host
    spec:
      containers:
      - image: redis:latest
        imagePullPolicy: ""
        name: redis-host
        resources: {}
      restartPolicy: Always
      serviceAccountName: ""
      volumes: null
status: {}